// KTODO: USAR: body.bigWindow
vendors = official;
$bigSize = '(min-width: 1200px) and (min-height: 700px)';

// KTODO: Mover a theme
@import './../../node_modules/raster/raster.grid.css';
@import 'fonts.styl';

// ________________________
// DEFAULT VARS
// ________________________
$hubCodeColors {
	--code-default: #24292e;
	--code-comment: #8d97a2;
	--code-tag: #d73a49; // red
	--code-section: #d73a49; // red2
	--code-keyword: #6f42c1; // violet
	--code-property: #005cc5; // blue
	--code-string: #22863a; // green
	--code-variable: #f17443; // orange
	--code-symbol: #032f62; // dark blue
}

$defaultCodeColors {
	--code-default: #c5d5d5;
	--code-comment: #777d89;
	--code-tag: #e06c75;
	--code-section: #e06c75;
	--code-keyword: #c678dd;
	--code-property: #56b6c2;
	--code-string: #98c379;
	--code-variable: #e5c07b;
	--code-symbol: #61aeee;
}

$defaultCodeColorsAlt {
	--code-default: #d1dcd9;
	--code-comment: #777d89;
	--code-tag: #ea6f80;
	--code-section: #ea6f80;
	--code-keyword: #c77ce9;
	--code-property: #5bcad1;
	--code-string: #a6cf7f;
	--code-variable: #f1c17d;
	--code-symbol: #63c1fc;
}

body {
	--scale: 1;
	/* Sizes */
	--padding: calc(18px * var(--scale));
	--searchBoxHeight: calc(82px * var(--scale));
	--itemHeight: calc(54px * var(--scale));
	--statusBarHeight: calc(32px * var(--scale));
	--iconSize: calc(32px);
	--iconSizeSmall: calc(24px);
	--propRulesView: 30%;
	--propRulesViewMax: 520px;
	--propRulesViewMin: 400px;
	--mainBorderRadius: 6px;
	--mainAlpha: 1;
	/* Opacity */
	--lowOpacity: 0.4;
	--medOpacity: 0.6;
	--hiOpacity: 0.8;
	/* Times */
	--animSpeedFactor: 1;
	--timeSpin: 0.25s;
	--timeBackTransition: 64ms;
	/* Font */
	--mainFont: 'Inter', system-ui, sans-serif;
	--mainFontSmall: 'Inter', system-ui, sans-serif;
	--mainFontSearch: 'Inter', system-ui, sans-serif;
	--mainFontMono: 'Roboto Mono', 'inputmono', Monaco, monospace;
	--mainFontWeight: 400;
	--mainFontWeightCode: 400;
	--smallFontWeight: 400;
	--h1FontWeight: 300;
	--mainSearchFontSize: calc(32px * var(--scale));
	--ruleNameFontSize: calc(15px * var(--scale));
	--smallFontSize: calc(11px * var(--scale));
	--codeFontSize: calc(16px * var(--scale));
	--codeSmallFontSize: calc(var(--codeFontSize) - 1px);
	--codeBigFontSize: calc(var(--codeFontSize) + 1px);
	--h1FontSize: calc(1.85em);
	--minWidth: 400px;
	--radBorder: 3px;
	--highLight_withBorder: none; // block
}

body {
	--backColor: #1d1e24; // back
	--backLightColor: #272831; // bar color
	--darkColor: darken(#1d1e24, 5); // Dark
	--hoverColor: var(--darkColor); // hover //Btns/combos
	--textLowColor: #94969e; // name color
	--textHighColor: #eff0eb; // name color selected
	--mainSearchColor: var(--textHighColor);
	--accentColor: #4abd9a; // HighLight /celeste
	--accentColor2: #ffcd39; // HighLight /amarillo
	--caretColor: var(--textHighColor); // HighLight /celeste
	--hrTagColor: rgba(255, 255, 255, 0.1); // hr separador
	--buttonBackColor: var(--darkColor);
	--buttonFrontColor: #8ca1a7; // textLowColor// Button Front
	--warnColor: #fdbc3f;
	--errorColor: #ff5f56;
	--validColor: #4abd9a;
	--asertColor: var(--accentColor);
	--grayHighlight: #fff;
	@extend $defaultCodeColorsAlt;
	--code-default: var(--textHighColor);
	--code-comment: var(--textLowColor);

	div.newRule {
		color: var(--darkColor);
	}
}

// LIGHT DEFAULTS
body.isLight, body.defaultLight {
	--backColor: #f5f6f7; // back
}

body:not(.isDark) {
	--lowOpacity: 0.5;
	--medOpacity: 0.75;
	--hiOpacity: 0.9;
	--backLightColor: #e8e9ec;
	--darkColor: #e2e5ec; // hover
	--hoverColor: var(--darkColor); // hover //Btns/combos
	--textLowColor: #81879a;
	--textHighColor: #373844;
	--mainSearchColor: var(--textHighColor);
	--accentColor: #3f538b;
	--accentColor2: #4967bb;
	--caretColor: var(--textHighColor); // HighLight /celeste
	--hrTagColor: rgba(0, 0, 0, 0.1); // hr separador
	--buttonBackColor: var(--darkColor); // backLightColor // Button Back
	--buttonFrontColor: #000; // textLowColor// Button Front
	--iframeBlendMode: multiply;
	/* ExraColors */
	--warnColor: #d9b265;
	--errorColor: #f78c6c;
	--validColor: #4abd9a;
	--asertColor: var(--accentColor);
	--grayHighlight: #000;
	@extend $hubCodeColors;
	--code-default: var(--textHighColor);
	--code-comment: var(--textLowColor);

	div.newRule {
		color: var(--darkColor);
	}
}

// ________________________
// SPECIALS
// ________________________
body.big {
	--scale: 1.15 !important;
	--padding: 20px;
	--searchBoxHeight: 94px;
	--itemHeight: 62px;
	--statusBarHeight: 32px;
}

body.small {
	--scale: 0.85 !important;
	--padding: 15px;
	--searchBoxHeight: 70px;
	--itemHeight: 46px;
	--statusBarHeight: 24px;
}

// ________________________
// AUXS
// ________________________
.colorDefault, .accentColor {
	color: var(--accentColor);

	svg path {
		fill: var(--accentColor);
	}
}

.accentColor2 {
	color: var(--accentColor2);

	svg path {
		fill: var(--accentColor2);
	}
}

.backColor {
	color: var(--backColor);
}

.backLightColor {
	color: var(--backLightColor);
}

.caretColor {
	color: var(--caretColor);
}

.textLowColor {
	color: var(--textLowColor);
}

.textHighColor {
	color: var(--textHighColor);
}

.hrTagColor {
	color: var(--hrTagColor);
}

.buttonBackColor {
	color: var(--buttonBackColor);
}

.buttonFrontColor {
	color: var(--buttonFrontColor);
}

.noSelect {
	user-select: none;
}

.zindex1 {
	z-index: 1;
}

.zindex2 {
	z-index: 2;
}

.zindex3 {
	z-index: 3;
}

.zindex10 {
	z-index: 10;
}

.zindex20 {
	z-index: 20;
}

.zindex30 {
	z-index: 30;
}

.zindex100 {
	z-index: 100;
}

.zindex1000 {
	z-index: 1000;
}

.hideObj {
	visibility: hidden;
}

.hideObjForce {
	visibility: hidden;
	pointer-events: none !important;
	z-index: -100;
}

.flipX {
	transform: scaleX(-1);
}

.iconRuleInLoad {
	color: var(--textLowColor);
	opacity: 0.15;
	animation: spin calc(var(--timeSpin) * 2.5) infinite linear;
}

.spininLoad {
	animation: spin calc(var(--timeSpin) * 2.5) infinite linear;
}

.spininLoadFast {
	animation: spin calc(var(--timeSpin) * 1) infinite linear;
}

// ________________________
// ANIM
// ________________________
MX_transition($time = 0.4s) {
	transition: all $time cubic-bezier(0.19, 1, 0.22, 1);
}

#content.disableTmpAnims, #content:not(.isFocus) {
	--animSpeedFactor: 0;

	body:not(.isProd) &:after {
		position: absolute;
		top: 0%;
		left: 0px;
		display: block;
		padding: 2px 3px;
		content: 'no anims';
		text-align: center;
		font-size: var(--smallFontSize);
		font-family: var(--mainFontSmall);
		font-weight: var(--smallFontWeight);
		line-height: 1.2;
		pointer-events: none;
		background: #f00;
		color: #fff;
		z-index: 1001;
	}
}

body:not(.isProd) #content:not(.isFocus):after {
	content: 'no focus';
}

.animViewerTransition {
	transition: width calc(0.032s * var(--animSpeedFactor)), max-width calc(0.032s * var(--animSpeedFactor)), min-width calc(0.032s * var(--animSpeedFactor));
	transition-delay: calc(0.096s * var(--animSpeedFactor));
}

.animsEnabled .ruleListCelda, .animsEnabled .ruleListCelda .ruleInfo {
	// MX_transition(calc(0.16s * var(--animSpeedFactor)));
}

// KTODO: hacer lo mismo para todos los MX_transition
.animsEnabled .ruleListCelda.toDeletedCss {
	margin-top: calc(var(--itemHeight) * -1);
	MX_transition(calc(0.32s * var(--animSpeedFactor)));
}

.animsEnabled .scrollTrackEl, .scrollTrackEl {
	MX_transition(calc(0.32s * var(--animSpeedFactor)));
}

// ________________________
// WINDOW
// ________________________
html {
	overflow: hidden;
}

body {
	margin: 0;
	padding: 0;
	width: 100%;
	font-weight: var(--mainFontWeight);
	font-family: var(--mainFont);
	text-rendering: optimizeLegibility;
	font-smoothing: subpixel-antialiased;
	// font-feature-settings: 'tnum' 1, 'frac' 1;
	font-feature-settings: 'tnum' 1;
	font-variant-ligatures: normal;
	letter-spacing: 0;
	// scroll-behavior: smooth;
	// overscroll-behavior-y: none;
	overflow: hidden;

	// disable retina subpixel
	&, .TB-Option-celd-label, #ruleViewer {
		&, .cm-def, .hljs, p, ul, li, a, pre, code, h1, h2, h3, h4, h5 {
			@media only screen and (min-device-pixel-ratio: 1.25), only screen and (min-resolution: 200dpi), only screen and (min-resolution: 1.25dppx) {
				transform: translateZ(0px) !important;
				font-smoothing: antialiased !important;
			}
		}
	}

	&.noSubPixel {
		transform: translateZ(0px);
		font-smoothing: antialiased !important;
	}
}

body.isMac {
	--mainFont: system-ui, sans-serif;
	--mainFontSmall: system-ui, sans-serif;
	--mainFontSearch: system-ui, sans-serif;
	--mainFontWeight: 400;
}

h1, h2, h3, h4, h5, p {
	font-family: var(--mainFont);
}

h1, h2, h3 {
	font-weight: var(--h1FontWeight);
}

#ruleViewerWrappSize.smallViewer {
	.hiddenInSmallViewer {
		visibility: hidden !important;
		position: absolute;
		z-index: -1;
	}

	.noDisplayInSmallViewer {
		display: none !important;
	}
}

html, body {
	overflow: hidden;
}

html, body, #content, #inner-content {
	min-width: var(--minWidth);
}

$borderContent {
	// @extend $transBack;
	transition: border-color calc(var(--timeBackTransition) * var(--animSpeedFactor)) linear;
	content: ' ';
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	pointer-events: none;
	width: calc(100% - 2px);
	height: calc(100% - 2px);
	z-index: 1000;
	border: solid 1px transparent;
	opacity: 0.14;
}

#content {
	// position: relative;
	margin: 0;
	padding: 0;
	overflow: hidden;

	body:not(.no-border):not(.maximized) &:before {
		@extend $borderContent;
		border-color: var(--textLowColor);
	}

	body.mainwin_transparent &:before {
		border-radius: var(--mainBorderRadius);
	}
}

#inner-content {
	margin: 0;
	padding: 0;
	width: auto;
	height: auto;
}

#content, #inner-content {
	overflow-x: hidden;
}

#dragWindow {
	position: absolute;
	top: 0;
	left: 0;
	z-index: 50;
	width: 100%;
	height: 32px;
	text-align: right;
	user-select: none;
	-webkit-app-region: drag;
}

#boxContentWrapper {
	min-height: 100vh;
}

.tbhidden {
	display: none !important;
}

.hNoBorder {
	border-bottom: 1px solid transparent !important;
}

// ________________________
// ANIMS & LOAD
// ________________________
@keyframes spin {
	0% {
		transform: rotate(0);
	}

	100% {
		transform: rotate(359deg);
	}
}

@keyframes pop {
	0% {
		transform: scale(0);
	}

	40% {
		transform: scale(0);
	}

	80% {
		transform: scale(1.5);
	}

	90% {
		transform: scale(0.6);
	}

	100% {
		transform: scale(1);
	}
}

@keyframes popAlt {
	60% {
		transform: scale(1.2);
	}

	75% {
		transform: scale(1);
	}

	90% {
		transform: scale(0.5);
	}
}

@keyframes favAnimIn {
	0% {
		transform: scale(1);
	}

	20% {
		transform: scale(0.3);
	}

	40% {
		transform: scale(2);
	}

	60% {
		transform: scale(0.3);
	}

	80% {
		transform: scale(1.5);
	}

	100% {
		transform: scale(1);
	}
}

@keyframes favAnimOut {
	0% {
		transform: scale(1);
	}

	25% {
		transform: scale(0.4);
	}

	50% {
		transform: scale(1);
		opacity: 0.75;
	}

	75% {
		transform: scale(0.4);
	}

	100% {
		transform: scale(1);
	}
}

@keyframes popAlpha {
	0% {
		opacity: 0;
	}

	40% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}

@keyframes flashCircle {
	0% {
		transform: translate(-50%, -50%) scale(0);
		opacity: 0.1;
	}

	50% {
		transform: translate(-50%, -50%) scale(0.5);
		opacity: 0.25;
	}

	100% {
		transform: translate(-50%, -50%) scale(2);
		opacity: 0;
	}
}

@keyframes flashCircleMin {
	0% {
		transform: translate(-50%, -50%) scale(0);
		opacity: 0.05;
	}

	40% {
		opacity: 0.1;
	}

	100% {
		transform: translate(-50%, -50%) scale(0.5);
		opacity: 0;
	}
}

@keyframes flashCircleMax {
	0% {
		transform: translate(-50%, -50%) scale(0);
		opacity: 0;
	}

	45% {
		transform: translate(-50%, -50%) scale(1);
		opacity: 0.4;
	}

	100% {
		transform: translate(-50%, -50%) scale(3);
		opacity: 0;
	}
}

@keyframes disappear {
	0%, 75% {
		opacity: 1;
	}

	100% {
		opacity: 0;
	}
}

.animate-spin {
	display: inline-block;
	animation: spin var(--timeSpin) infinite linear;
}

.animate-disappear {
	animation: disappear calc(0.75s * var(--animSpeedFactor)) ease;
}

.no-animate-disappear {
	opacity: 1;
}

.popOpen {
	animation: pop calc(0.4s * var(--animSpeedFactor)) ease-out;
}

.popOpenAlpha {
	animation: popAlpha calc(0.4s * var(--animSpeedFactor)) ease-out;
}

.iconFavAnimIn {
	animation: favAnimIn calc(0.45s * var(--animSpeedFactor)) ease-out;
	animation-delay: calc(0.15s * var(--animSpeedFactor)) !important;
	pointer-events: none !important;
}

.iconFavAnimOut {
	animation: favAnimOut calc(0.45s * var(--animSpeedFactor)) ease-in;
	animation-delay: calc(0.15s * var(--animSpeedFactor)) !important;
	pointer-events: none !important;
}

.circlePopOpen, .circlePopOpen-Min, .circlePopOpen-Max {
	position: relative;

	&:after {
		position: absolute;
		top: 50%;
		left: 50%;
		content: ' ';
		display: block;
		background-color: var(--grayHighlight);
		width: 100%;
		padding-bottom: 100%;
		transform: translate(-50%, -50%);
		border-radius: 100px;
		animation: flashCircle calc(0.35s * var(--animSpeedFactor)) ease;
		pointer-events: none;
		opacity: 0;
	}
}

.circlePopOpen-Min:after {
	animation: flashCircleMin calc(0.15s * var(--animSpeedFactor)) ease;
}

.circlePopOpen-Max:after {
	animation: flashCircleMax calc(0.35s * var(--animSpeedFactor)) ease;
}

.canDisapppear {
	&:not(.no-animate-disappear), &.animate-disappear {
		opacity: 0;
	}
}

.circlePopOpenAlt {
	@extend .circlePopOpen;
}

// ________________________
// ICON
// ________________________
i.main_ico {
	display: inline-block;
	margin-right: calc(var(--iconSize) * 0.1);
	margin-left: calc(var(--iconSize) * -0.4);
	width: calc(var(--iconSize) * 1.8);
	vertical-align: top;
	text-align: center;
	font-size: var(--iconSize);
	font-style: normal;

	&:before {
		font-size: var(--iconSize);
		line-height: var(--itemHeight) !important;
		pointer-events: none;
	}

	&.iconChar {
		font-size: var(--iconSize);
		line-height: var(--iconSize) !important;
		transform: scale(0.9);
		padding-top: 2px;
	}

	&.small_ico {
		font-size: var(--iconSizeSmall);

		&:before {
			font-size: var(--iconSizeSmall);
		}
	}
}

.icoFav i {
	display: inline-block;
}

i.main_ico .wrappicon {
	display: block;
	margin-top: calc((var(--itemHeight) - var(--iconSize)) * 0.5);

	svg {
		width: auto;
		height: var(--iconSize);
	}

	img, .ico_img {
		height: var(--iconSize);
		max-width: var(--iconSize);
	}

	img {
		object-fit: contain;
		object-position: center;
	}

	.ico_img {
		max-width: 100%;
		background-size: contain;
		background-position: 50% 50%;
		background-repeat: no-repeat;
	}
}

i.main_ico.delayed .wrappicon {
	visibility: hidden;
}

i.main_ico.small_ico .wrappicon {
	transform: translateY(calc((var(--itemHeight) - var(--iconSizeSmall)) * 0.5));

	svg {
		height: var(--iconSizeSmall);
	}

	img, .ico_img {
		height: var(--iconSizeSmall);
		max-width: var(--iconSizeSmall);
	}
}

i.main_ico.animate-spin-ico .wrappicon svg, .main_ico.animate-spin-ico .wrappicon img {
	animation: spin var(--timeSpin) infinite linear;
}

i.main_ico.noShadow {
	&:before {
		text-shadow: none !important;
	}

	.wrappicon svg {
		filter: none !important;
	}

	.wrappicon img {
		filter: none !important;
	}
}

#ruleContext i.main_ico, #pathIndicator i.main_ico {
	line-height: 1;

	&:before {
		line-height: var(--searchBoxHeight) !important;
	}

	.wrappicon {
		margin-top: calc((var(--searchBoxHeight) - var(--iconSize)) * 0.5);
	}

	&.small_ico .wrappicon {
		margin-top: calc((var(--searchBoxHeight) - var(--iconSizeSmall)) * 0.5);
	}
}

#listadoRules .ruleIconContext {
	@extend i.main_ico;
	float: right;
	margin-right: calc(var(--iconSizeSmall) * -0.25);
	margin-left: calc(var(--iconSizeSmall) * 0.4);
	width: calc(var(--iconSizeSmall) * 1);
}

#listadoRules .ruleIconContext.smallContext {
	margin-left: calc(var(--iconSizeSmall) * 0.4 * 1);
	width: calc(var(--iconSizeSmall) * 1 * 0.9);
	height: var(--itemHeight);
	line-height: var(--itemHeight);

	i {
		zoom: 0.9;
	}
}

// ________________________
// BOX
// ________________________
#boxContentWrapper {
	position: relative;
	display: block;
	margin: 0;
	padding: 0;
	width: 100%;
	user-select: none;
}

#mainSearchWrapper {
	position: relative;
	overflow: hidden;
	padding: 0 var(--padding);
	width: auto;
	height: var(--searchBoxHeight);
}

#mainSearchWrapper #pathIndicator {
	.pathName {
		font-size: var(--smallFontSize);
		font-family: var(--mainFontSmall);
		font-weight: var(--smallFontWeight);
	}
}

#mainSearch, #mainSearchCopy, #searchResult {
	position: absolute;
	top: 50%;
	overflow: hidden;
	margin: 0;
	padding: 0;
	width: 86%;
	outline: none;
	border: none;
	background: none;
	letter-spacing: -1px;
	font-weight: 300;
	font-size: var(--mainSearchFontSize);
	font-family: var(--mainFontSearch);
	line-height: 2;
	transform: translate(0, -50%);
	caret-color: var(--caretColor);

	body.isDark &::selection {
		background: rgba(#fff, 0.2);
	}

	body:not(.isDark) &::selection {
		background: rgba(#000, 0.2);
	}

	#content:not(.isFocus) & {
		caret-color: transparent !important;
	}
}

#searchInputBox {
	width: 100%;
	height: 100%;
	transition: opacity calc(0.15s * var(--animSpeedFactor)) ease-out;

	&:not(.mainSearchOnFocus) {
		opacity: 0.5;
	}
}

#mainSearchCopy {
	opacity: 0;
}

#mainSearchCopy, #searchResult {
	position: relative;
	top: initial;
	left: initial;
	display: inline-block;
	width: auto;
	letter-spacing: -0.25px;
	line-height: var(--searchBoxHeight);
	transform: translate(0, 0);
	pointer-events: none;
	user-select: none;
}

#searchResult {
	margin-left: 5px;
}

#mainSearchIcon {
	position: absolute;
	top: 50%;
	right: var(--padding);
	font-size: var(--iconSizeSmall);
	transform: translate(0, -50%);
	pointer-events: none;
}

#listadoRules {
	#ruleListado {
		position: relative;
		overflow: hidden;
		margin: 0;
		padding: 0;
	}

	.ruleListCelda, #ruleContext {
		position: relative;
	}
}

#listadoRules .ruleListCelda, #ruleContext, #pathIndicator {
	overflow: hidden;
	margin: 0;
	padding: 0 var(--padding);
	min-height: var(--itemHeight);
	width: auto;
	height: var(--itemHeight);
	cursor: pointer;

	span.ruleNameAndDesc {
		display: inline-block;
		overflow: hidden;
		margin: 0;
		width: calc(100% - 120px);
		height: var(--itemHeight);
		line-height: var(--itemHeight);
	}

	div.newRule {
		position: absolute;
		top: 50%;
		right: 74px;
		display: block;
		margin-top: 1px;
		padding: 2px 5px;
		border-radius: 2px;
		text-align: center;
		font-size: var(--smallFontSize);
		font-family: var(--mainFontSmall);
		font-weight: var(--smallFontWeight);
		line-height: 1.2;
		transform: translate(0, -50%);
		drop-shadow: 0 1px 0 rgba(0, 0, 0, 0.25);

		body.isMac & {
			line-height: 1.3;
		}
	}

	span.ruleName {
		display: block;
		margin: 0;
		height: calc(var(--itemHeight) * 0.675);
		text-overflow: ellipsis;
		white-space: nowrap;
		letter-spacing: 0;
		font-size: var(--ruleNameFontSize);
		line-height: calc(var(--itemHeight) * 0.9);
		font-weight: 500 !important;
		letter-spacing: -0.1px;
	}

	span.ruleDescription {
		display: block;
		margin: 0;
		width: calc(100% - 100px);
		height: calc(var(--itemHeight) * 0.3);
		text-overflow: ellipsis;
		white-space: nowrap;
		font-size: calc(var(--smallFontSize));
		font-family: var(--mainFontSmall);
		font-weight: var(--smallFontWeight);
		line-height: calc(var(--itemHeight) * 0.15);
	}

	.ruleInfo {
		position: absolute;
		top: 2px;
		right: calc(var(--padding) + var(--iconSize) * 1.85);
		width: auto;
		font-size: var(--smallFontSize);
		font-family: var(--mainFontSmall);
		font-weight: var(--smallFontWeight);
		line-height: var(--itemHeight);
	}

	&.noDesc {
		span.ruleDescription {
			display: none;
		}

		span.ruleName {
			height: calc(var(--itemHeight) * 1);
			white-space: nowrap;
			font-size: var(--ruleNameFontSize);
			line-height: calc(var(--itemHeight) * 1);
		}
	}
}

#ruleContext, #pathIndicator {
	padding-right: 0;
	padding-left: 0;
}

#ruleContext .contextTitle, #pathIndicator .pathName {
	overflow: hidden;
	max-width: 85vh;
	text-overflow: ellipsis;
	white-space: nowrap;
	font-size: calc(var(--ruleNameFontSize) * 1.5);
	line-height: var(--searchBoxHeight);
}

#pathIndicator .pathName {
	position: absolute;
	top: -10px;
	margin-left: 2px;
	width: auto;
	text-transform: lowercase;
	font-size: calc(var(--ruleNameFontSize) * 1.5);
	line-height: calc(var(--searchBoxHeight) * 0.75);
}

#listadoRules {
	.ruleListCelda.celd_loading {
		text-align: center;
		pointer-events: none !important;

		.ruleInfo {
			display: none;
		}

		span.ruleName {
			text-align: center;
			text-transform: uppercase;
		}
	}

	.ruleListCelda {
		background-color: transparent;
		color: #ccc;
	}

	.ruleListCelda.highLight, .ruleListCelda.highLight .ruleInfo {
		transition: none;
	}
}

#status-bar {
	position: absolute;
	bottom: 0;
	left: 0;
	z-index: 15;
	display: block;
	padding: 0;
	width: 100%;
	height: var(--statusBarHeight);
	font-size: var(--smallFontSize);
	font-family: var(--mainFontMono);
	font-family: var(--mainFontSmall);
	font-weight: var(--smallFontWeight);
	line-height: calc(var(--statusBarHeight) + 2px);
	overflow: hidden;

	> span {
		display: block;
		padding-right: var(--padding);
		padding-left: var(--padding);
	}

	.status-bar-icon {
		// background-color #000
		text-align: center;
		display: inline-block;
		font-size: calc(var(--smallFontSize) + 5px) !important;
		cursor: pointer;

		&.mdi-white-balance-sunny, &.fas-moon {
			font-size: calc(var(--smallFontSize) + 2px) !important;

			&.fas-moon:before {
				margin-left: 3px;
			}
		}

		&.mdl2-keyboard-classic {
			margin-top: -1px;
		}

		&.alwaysontop-icon {
			margin-right: 4px;
			color: var(--accentColor2);
		}

		&.iohook-disabled {
			opacity: 0.5;
		}

		&:hover {
			color: var(--accentColor2);
			opacity: 1;
		}
	}

	.__alwaysontop-circlePopOpen, .status-bar-icon-wrapp {
		width: auto;
		float: left;
		top: -1px;
		margin-left: calc(var(--padding) * -0.25 - 0px);
		padding-left: calc(var(--padding) * 0.25 + 2px);
		padding-right: calc(var(--padding) * 0.25 + 2px);
		vertical-align: middle;
		max-height: 14px;

		&:after {
			top: calc(50% + 6px) !important;
			left: calc(50% + 0px) !important;
		}
	}

	.status-bar-icon-wrapp {
		margin-right: 0;
		padding-right: 0;
		padding-left: 0;
		top: 0;
		margin-left: calc(var(--padding) * 0.75 + 2px);
		float: right;
	}
}

#status-bar .infoDer {
	float: right;
	line-height: calc(var(--statusBarHeight));
}

.mousetrapCapture {
	position: absolute;
	overflow: hidden;
	width: 1px;
	height: 1px;
	opacity: 0;
}

// ________________________
// SCROLL
// ________________________
.scrollTrackEl {
	position: absolute;
	top: 0;
	right: 0;
	margin: 4px;
	width: 2px;
	height: 36px;
	border-radius: 0 !important;
	z-index: 2;
	@extend .canDisapppear;
}

// ________________________
// COLORS
// ________________________
// BACK MAIN
html {
	background: transparent;
}

body {
	background: transparent;
}

$transBack {
	transition: background-color calc(var(--timeBackTransition) * var(--animSpeedFactor)) linear, color calc(var(--timeBackTransition) * var(--animSpeedFactor)) linear, border-color calc(var(--timeBackTransition) * var(--animSpeedFactor)) linear;
}

#TBN_main_viewerPreview {
	@extend $transBack;
}

#content {
	@extend $transBack;
	background: var(--backColor);
	opacity: var(--mainAlpha);

	body.mainwin_transparent & {
		border-radius: var(--mainBorderRadius) !important;
	}
}

// SEARCH
#mainSearch {
	color: var(--mainSearchColor);

	&::placeholder {
		color: var(--textLowColor);
		opacity: var(--medOpacity);
	}
}

#mainSearchCopy, #searchResult {
	color: var(--textHighColor);
	color: var(--accentColor);
}

#ruleContext .contextTitle {
	color: var(--textHighColor);
}

#pathIndicator .pathName {
	color: var(--textHighColor);
	opacity: var(--hiOpacity);
}

// ________________________
// RULES
// ________________________
#listadoRules {
	.ruleListCelda .ruleInfo {
		color: transparent;
	}

	.ruleListCelda .ruleInfo.showRuleScore {
		color: var(--textLowColor);
		opacity: 0.8;
	}

	.ruleListCelda .ruleIconContext i {
		color: var(--textLowColor);
		opacity: var(--medOpacity);

		&.mdi-star, &.painted {
			color: var(--accentColor2) !important;
			opacity: 1;
			z-index: 10;
		}

		&:hover {
			color: var(--accentColor);
			opacity: 1;
		}
	}

	.icoFav i:hover {
		color: var(--accentColor2) !important;
	}

	span.ruleName {
		color: var(--textLowColor);
	}

	.ruleListCelda span.ruleDescription {
		color: var(--textLowColor);
		opacity: var(--lowOpacity);
		// opacity: 1;
	}

	div.newRule {
		background-color: var(--accentColor);
		opacity: 1;

		&:hover {
			background-color: var(--accentColor2) !important;
		}
	}

	.ruleList:not(.mouseActivated_NO) .ruleListCelda.highLight {
		@extend $transBack;
		background: var(--backLightColor);
		// box-shadow: 0px 0px 1px rgba(#000, 0.25);
		z-index: 1;

		.ruleName {
			color: var(--textHighColor);
		}

		.ruleDescription {
			// opacity: var(--hiOpacity);
			opacity: 1;
		}

		.ruleInfo {
			// opacity 1
		}

		div.newRule {
			background-color: var(--accentColor);
			opacity: 1;
		}

		&:after {
			@keyframes animBorder {
				0% {
					opacity: 0;
					width: 0;
				}

				75% {
					opacity: 0;
					width: 0;
				}
			}

			display: var(--highLight_withBorder);
			position: absolute;
			top: 0;
			left: 0;
			height: 100%;
			content: ' ';
			width: 2px;
			background-color: var(--accentColor);
			// animation: animBorder calc(0.65s * var(--animSpeedFactor)) ease;
		}
	}

	.ruleList.mouseActivated_NO .ruleListCelda:hover {
		background: var(--backLightColor);
	}
}

#mainSearchIcon {
	color: var(--textLowColor);
}

// ViewerColors
#ruleViewer, #ruleViewer_child {
	h1, h2, h3, h4, h5, & {
		color: var(--code-default);
	}

	h1, h2, h3, h4 {
		&, a, p {
			color: var(--accentColor);
		}
	}

	> h1 {
		border-bottom: 1px solid var(--hrTagColor);
	}

	table, td, th {
		color: var(--textLowColor);
	}

	a {
		color: var(--textHighColor);
		opacity: 0.8;

		&:hover {
			opacity: 1;
			color: var(--accentColor);
		}
	}

	a:visited {
		color: var(--accentColor);
	}

	ul, ol {
		color: var(--textLowColor);
	}

	pre:not(.CodeMirror-line) {
		background-color: transparent !important;
	}

	hr {
		border-top-color: var(--hrTagColor);
	}

	iframe:not(.__noBackground), webview:not(.__noBackground) {
		background-color: #fff;
	}

	#ruleViewerWrapp {
		color: var(--textHighColor);
	}

	.loading {
		&:after {
			border-left-color: var(--textLowColor) !important;
			opacity: var(--medOpacity);
		}
	}

	.buttonsviewer {
		a {
			background-color: var(--buttonBackColor);
		}

		a:before {
			color: var(--buttonFrontColor);
		}

		&:hover, &:hover a:before {
			color: var(--accentColor) !important;
		}
	}

	b {
		font-weight: 500;
	}
}

// ________________________
// SCROLLER
// ________________________
scrollExtend, #ruleViewerWrapp, iframe, webview, .CodeMirror-vscrollbar, .CodeMirror-hscrollbar {
	outline: none !important;

	&::-webkit-scrollbar, &::-webkit-scrollbar-track, &::-webkit-scrollbar-corner {
		// background: var(--backColor) !important;
		background: transparent !important;
	}

	// scroll-behavior: smooth;
	&::-webkit-scrollbar, &::-webkit-scrollbar-track {
		border-radius: 0 !important;
		height: var(--padding);
		width: var(--padding);
	}

	&::-webkit-scrollbar-thumb {
		border-radius: 0 !important;
		background: transparent !important;
	}

	&::-webkit-scrollbar-thumb:vertical {
		border-radius: 0 !important;
		bottom: 0;
		border-right: solid 2px var(--accentColor);
		min-height: 42px;

		&:hover {
			border-right: solid 4px var(--accentColor);
		}
	}

	&::-webkit-scrollbar-thumb:horizontal {
		border-radius: 0 !important;
		right: 0;
		border-bottom: solid 2px var(--accentColor);
		min-width: 42px;

		&:hover {
			border-bottom: solid 4px var(--accentColor);
		}
	}

	&::-webkit-scrollbar-corner, &::resizer {
		display: none !important;
	}
}

#ruleViewer_child {
	.CodeMirror-vscrollbar, .CodeMirror-hscrollbar {
		scroll-behavior: initial !important;
	}
}

// STATUS & SCROLL
#status-bar {
	@extend $transBack;
	background: var(--backColor) !important;
	background: transparent !important;
	color: var(--textLowColor);
}

.scrollTrackEl {
	background-color: var(--accentColor);
}

// ________________________
// VIEWER
// ________________________
#boxContentWrapper .boxContentWrapperList {
	position: relative;

	#listadoRules {
		position: relative;
		z-index: 4;
		display: block;
		max-width: 100%;
		width: 100%;
		overflow: hidden;
		@extend .animViewerTransition;
	}

	#ruleViewer {
		position: absolute;
		top: 0;
		right: 0;
		z-index: 1;
		display: block;
		min-width: calc(100% - var(--propRulesViewMax));
		max-width: calc(100% - var(--propRulesViewMin));
		width: calc(100% - var(--propRulesView));
		user-select: text !important;
		mix-blend-mode: var(--iframeBlendMode);

		&.noBlend {
			mix-blend-mode: initial;
		}
	}
}

#boxContentWrapper .boxContentWrapperList #listadoRules {
	min-width: var(--propRulesViewMin);
}

#boxContentWrapper .boxContentWrapperList.withViewer {
	#listadoRules {
		min-width: var(--propRulesViewMin);
		max-width: var(--propRulesViewMax);
		width: var(--propRulesView);
		@extend .animViewerTransition;
	}
}

// ________________________
// VIEWER PANEL
// ________________________
#ruleViewerWrappSize {
	height: 100%;
}

#ruleViewer {
	height: 100%;

	iframe, webview {
		margin: 0 !important;
		padding: 0 !important;
		width: 100%;
		height: 100%;
		border: none !important;
		border-radius: var(--radBorder);

		&.withTrans {
			transition: none;
		}
	}

	#ruleViewerWrapp {
		overflow: auto;
		padding: 0;
		margin: 0 var(--padding);
		margin-left: calc(var(--padding) * 1);
		width: calc(100% - (var(--padding) * 2));
		height: calc(100% - (var(--padding) * 0.5));
		letter-spacing: 0;
	}

	.loading, .loadingMin {
		position: relative;
		display: block;
		width: 100%;
		height: 100%;

		&:after {
			position: absolute;
			top: calc(50% - calc(var(--iconSize) * 0.75) / 2);
			left: calc(50% - calc(var(--iconSize) * 0.75) / 2);
			border: 2px solid rgba(0, 0, 0, 0);
			width: calc(var(--iconSize) * 0.75);
			height: calc(var(--iconSize) * 0.75);
			content: ' ';
			animation: spin var(--timeSpin) infinite linear;
			border: 2px solid transparent;
			border-radius: 50%;
			opacity: 0.5;
		}
	}

	.loading.loadingMin {
		height: calc(var(--iconSize) * 3);

		&:after {
			top: calc(var(--iconSize) * 1);
		}
	}

	.buttonsviewer {
		position: absolute;
		right: calc(var(--padding) * 1.4);
		bottom: calc(var(--padding) * 1);

		a {
			display: inline-block;
			width: var(--iconSize);
			height: var(--iconSize);
			border-radius: 100%;
			font-size: 0;
			cursor: pointer;

			&:hover {
				// opacity: 0.9;
			}
		}

		a:before {
			display: block;
			width: var(--iconSize);
			height: var(--iconSize);
			text-align: center;
			font-size: calc(var(--iconSizeSmall) * 0.8);
			line-height: calc(var(--iconSize) * 1);
		}
	}

	.frameInLoad {
		iframe, webview, .buttonsviewer, .webview {
			opacity: 0;
		}

		.loading {
			position: absolute;
			top: calc(var(--padding) * -0.25);
			left: 0;
		}
	}

	.frameLoaded {
		.loading {
			display: none;
		}

		iframe, webview, .buttonsViewer, .webview {
			opacity: 1;
		}
	}

	.hljs {
		@extend scrollExtend;
	}
}

// ________________________
// MARKDOWN
// ________________________
.markdownView, .webview, #ruleViewer {
	&, td {
		font-size: calc(var(--codeFontSize));
		font-weight: var(--smallFontWeight);

		@media $bigSize {
			font-size: calc(var(--codeBigFontSize));
			font-weight: var(--mainFontSmall);
		}
	}

	& {
		margin: 0;
		padding: 0;
		max-width: 100%;
	}

	.__maxViewWidth {
		display: block;
	}

	&.markdownView, .__maxViewWidth {
		max-width: 1080px;
	}

	body.isDark &.markdownView img {
		background-color: #fff;
	}

	a {
		font-weight: var(--smallFontWeight) !important;
	}

	&, p, > div, > ul, > ul li, > span {
		line-height: 1.75;
	}

	tt, code, pre:not(.CodeMirror-line) {
		font-family: var(--mainFontMono);
	}

	h1, h2, h3, h4, h5, h6 {
		line-height: 1.25;
		margin-block-start: 1.2em;
	}

	h1, h2, h3 {
		font-weight: var(--h1FontWeight);
	}

	h4, h5, h6 {
		font-weight: var(--mainFontWeight);
	}

	h1 {
		font-size: var(--h1FontSize);
		line-height: 1.25;
		margin-block-start: 1.2em;
	}

	h1:first-child {
		margin-top: 0;
		padding-top: 0;
	}

	h2 {
		font-size: calc(var(--h1FontSize) * 0.9);
	}

	h3 {
		font-size: calc(var(--h1FontSize) * 0.75);
	}

	h4 {
		font-size: calc(var(--h1FontSize) * 0.65);
	}

	h5 {
		font-size: calc(var(--h1FontSize) * 0.55);
	}

	h6 {
		font-size: calc(var(--h1FontSize) * 0.5);
	}

	a {
		text-decoration: none;
	}

	img {
		max-width: 100%;
	}

	code.preWhiteSpace {
		white-space: pre;
	}

	pre:not(.CodeMirror-line) > span, code, code[class], pre:not(.CodeMirror-line) {
		font-weight: var(--mainFontWeightCode);
		font-size: var(--codeFontSize);
		font-family: var(--mainFontMono);
		line-height: 1.5;

		&.big, .big & {
			font-size: var(--codeBigFontSize);
			line-height: 1.7 !important;
		}

		@media $bigSize {
			font-size: var(--codeBigFontSize);
			line-height: 1.7 !important;
		}
	}

	pre:not(.CodeMirror-line):not(.CodeMirror-placeholder) > span, pre:not(.CodeMirror-line):not(.CodeMirror-placeholder) {
		font-size: var(--codeSmallFontSize) !important;

		@media $bigSize {
			font-size: var(--codeFontSize) !important;
			line-height: 1.7 !important;
		}
	}

	&.markdownView {
		pre:not(.CodeMirror-line):not(.CodeMirror-placeholder):not(.noBack) {
			margin-top: 1.5em;
			margin-bottom: 1.75em;
		}
	}

	pre:not(.CodeMirror-line) code {
		display: block;
		padding: 0.5em;
		padding-left: 0;
		font-weight: var(--mainFontWeightCode) !important;
	}

	&.markdownView pre:not(.CodeMirror-line) code {
		min-width: calc(100% - var(--padding) * 2) !important;
		display: -webkit-inline-box !important;
		background-color: var(--darkColor) !important;
		background-color: transparent !important;
		border-radius: var(--radBorder) !important;
	}

	code {
		border: none;
		font-weight: var(--mainFontWeightCode) !important;
	}

	code[class] {
		border: none;
	}

	.extraMargin {
		padding-right: var(--padding);
		padding-left: var(--padding);
	}

	.word-wrap {
		word-wrap: break-word;
	}

	hr {
		overflow: hidden;
		margin-top: 1.5em;
		margin-bottom: 2em;
		height: 0;
		border-top-width: 1px;
		border-top-style: solid;
		border-right: none;
		border-bottom: none;
		border-left: none;
	}

	blockquote {
		margin-bottom: 2em;
		margin-top: 2em;
		margin-left: 6px;
		padding-left: 8px;
		border-left: 2px var(--accentColor) solid;
	}

	p {
		padding-top: 0 !important;
		margin-block-start: 0;
		margin-block-end: 1.5em;
	}

	ul {
		margin-block-end: 1.5em;
	}

	.task-list-item {
		list-style-type: none;
	}
}

.formatCode {
	padding: 0 !important;
	margin: 0 !important;
}

h1, h2, h3, h4, h5, h6, pre:not(.CodeMirror-line), code {
	a {
		text-decoration: none !important;
	}

	.improve-docs {
		display: none !important;
	}
}

._attribution, ._attribution-p {
	margin-top: 4em;
	font-size: 0.85em;
	opacity: 0.7;
}

/* IMPORTS */
@import 'mrdoob_stats.styl';
@import 'aux_compos.styl';
@import 'aux_icons.styl';
@import 'code.styl';
@import 'notes.styl';
@import 'stock_themes.styl';
@import 'test.styl';